import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_parquet('part-00000-c0fa7496-921d-48fd-88e8-33ac5109cff7-c000.snappy.parquet')

total_value_vector = df['total_value_of_services'].values
fmf_value_vector = df['fmf_value'].values
region_vector = df['customer_municipality'].values
age_vector = df['customer_age_group'].values
tenure_vector = df['customer_tenure'].values

def tenure_stats(tenure):
    tenure_mask = tenure_vector == tenure
    total_value = total_value_vector[tenure_mask]
    fmf_value = fmf_value_vector[tenure_mask]
    age = age_vector[tenure_mask]
    region = region_vector[tenure_mask]

    if len(total_value) == 0:
        return None

    stats = {
        'tenure': tenure,
        'total_value_mean': total_value.mean(),
        'total_value_std': total_value.std(),
        'fmf_value_mean': fmf_value.mean(),
        'fmf_value_std': fmf_value.std(),
    }
    
    return stats

unique_tenures = df['customer_tenure'].unique()
# Filter out None values
valid_tenures = []
valid_total_means = []
valid_fmf_means = []
for i, tenure in enumerate(unique_tenures):
    if tenure is not None and not pd.isna(tenure):
        stats = tenure_stats(tenure)
        if stats is not None:
            valid_tenures.append(tenure)
            valid_total_means.append(stats['total_value_mean'])
            valid_fmf_means.append(stats['fmf_value_mean'])

# Convert valid_tenures to strings and sort indices by the first digit
sorted_indices = sorted(range(len(valid_tenures)), key=lambda i: str(valid_tenures[i])[0])
valid_tenures = [valid_tenures[i] for i in sorted_indices]
valid_total_means = [valid_total_means[i] for i in sorted_indices]
valid_fmf_means = [valid_fmf_means[i] for i in sorted_indices]

# Join the three vectors into a 3 x N matrix
tenure_stats_matrix = np.vstack([valid_tenures, valid_total_means, valid_fmf_means])
# Plotting the tenure statistics
plt.figure(figsize=(12, 6))
plt.bar(valid_tenures, valid_total_means, label='Total Value Mean', alpha=0.6)
plt.bar(valid_tenures, valid_fmf_means, label='FMF Value Mean', alpha=0.6)
plt.xlabel('Tenure Group')
plt.ylabel('Mean Value')
plt.title('Tenure Statistics')
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig('tenure_statistics.png')
